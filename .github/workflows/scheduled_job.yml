name: Daily Report Automation

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00 执行
  workflow_dispatch:  # 允许手动触发

jobs:
  run-script:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    # 设置权限
    permissions:
      contents: write  # 允许推送到仓库
      pull-requests: write  # 允许创建和合并 Pull Request

    steps:
      # 1. 拉取代码
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: master  # 明确指定拉取 master 分支

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # 指定 Python 版本

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # 安装依赖

      # 4. 运行脚本
      - name: Run script
        env:
          LAOHUANGLI_API_KEY: ${{ secrets.LAOHUANGLI_API_KEY }}  # 老黄历 API Key
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}        # 天气 API Key
          WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}  # WxPusher AppToken
          WXPUSHER_TARGET_TYPE: ${{ secrets.WXPUSHER_TARGET_TYPE }}  # 目标类型（topic 或 uid）
          WXPUSHER_TARGET_ID: ${{ secrets.WXPUSHER_TARGET_ID }}      # 目标 ID（Topic ID 或 UID）
        run: |
          cd $GITHUB_WORKSPACE  # 切换到工作目录
          python message/main.py || exit 1  # 运行 Python 脚本

      # 5. 提交更新的 CSV 文件并推送到新分支
      - name: Commit updated CSV files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GITHUB_TOKEN
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # 清理未跟踪的文件（例如 __pycache__）
          git clean -f -d

          # 添加和提交 CSV 文件
          git add message/data/
          git commit -m "Automated CSV file update"

          # 创建并切换到新分支
          git checkout -b automated-updates

          # 推送到远程分支
          git push origin automated-updates --force

      # 6. 创建 Pull Request
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GITHUB_TOKEN
          branch: automated-updates  # 新分支名称
          base: master  # 目标分支
          title: "Automated CSV File Update"
          body: "This PR contains updated CSV files generated by GitHub Actions."
          delete-branch: true  # 合并后删除分支

      # 7. 自动合并 Pull Request
      - name: Auto-merge Pull Request
        if: steps.create-pr.outputs.pull-request-number != ''
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.create-pr.outputs.pull-request-number }}
            });

            // 确保 PR 是可合并的
            if (pr.mergeable === true) {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ steps.create-pr.outputs.pull-request-number }},
                merge_method: 'merge'  // 合并方式：merge、squash 或 rebase
              });
              console.log('PR merged successfully');
            } else {
              console.log('PR is not mergeable yet');
            }