name: Daily Report Automation

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00 执行
  workflow_dispatch:  # 允许手动触发

jobs:
  run-script:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    steps:
      # 1. 拉取代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # 指定 Python 版本

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # 安装依赖

      # 4. 安装 Chrome 和 ChromeDriver
      - name: Set up Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
          wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      # 5. 设置环境变量
      - name: Set environment variables
        env:
          LAOHUANGLI_API_KEY: ${{ secrets.LAOHUANGLI_API_KEY }}  # 老黄历 API Key
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}        # 天气 API Key
          WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}  # WxPusher AppToken
          WXPUSHER_TARGET_TYPE: ${{ secrets.WXPUSHER_TARGET_TYPE }}  # 目标类型（topic 或 uid）
          WXPUSHER_TARGET_ID: ${{ secrets.WXPUSHER_TARGET_ID }}      # 目标 ID（Topic ID 或 UID）

      # 6. 运行脚本
      - name: Run script
        run: python message/main.py  # 运行整合后的脚本

      # 7. 提交更新的 CSV 文件（如果需要）
      - name: Commit updated CSV files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add message/data/
          git commit -m "Update CSV files"
          git push