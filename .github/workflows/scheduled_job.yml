name: Daily Report Automation

on:
  schedule:
    - cron: '0 1 * * *'  # 每天 UTC 时间 01:00 执行（中国时间 09:00）
  workflow_dispatch:  # 允许手动触发

jobs:
  run-script:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    # 设置权限
    permissions:
      contents: write  # 允许推送到仓库

    steps:
      # 1. 拉取代码
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: master  # 明确指定拉取 master 分支

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # 指定 Python 版本

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          

      # 4. 运行脚本（支持重试）
      - name: Run script with retries
        id: run-script  # 为步骤添加 ID，便于后续判断状态
        continue-on-error: true  # 允许步骤失败时不终止整个作业
        env:
          LAOHUANGLI_API_KEY: ${{ secrets.LAOHUANGLI_API_KEY }}  # 老黄历 API Key
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}        # 天气 API Key
          WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}  # WxPusher AppToken
          WXPUSHER_TARGET_TYPE: ${{ secrets.WXPUSHER_TARGET_TYPE }}  # 目标类型（topic 或 uid）
          WXPUSHER_TARGET_ID: ${{ secrets.WXPUSHER_TARGET_ID }}      # 目标 ID（Topic ID 或 UID）
        run: |
          cd $GITHUB_WORKSPACE  # 切换到工作目录
          for i in {1..3}; do  # 重试 3 次
            python message/main.py && exit 0  # 如果成功，退出脚本
            echo "脚本执行失败，重试次数：$i"
            sleep 10  # 等待 10 秒后重试
          done
          exit 1  # 如果重试 3 次后仍然失败，退出并标记步骤为失败

      # 5. 提交更新的 CSV 文件并直接推送到 master 分支
      - name: Commit and push changes to master
        if: success()  # 仅在脚本成功时执行
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GITHUB_TOKEN
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git clean -f -d message/data/  # 仅清理 data 目录中的未跟踪文件

          # 添加和提交 CSV 文件
          git add message/data/
          git commit -m "Automated CSV file update [skip ci]"  # [skip ci] 避免触发新的 CI 运行

          # 直接推送到 master 分支
          git push origin master

      # 6. 如果脚本执行失败，通过 UID 发送推送通知
      - name: Send failure notification via UID
        if: failure()  # 仅在脚本失败时执行
        env:
          WXPUSHER_APP_TOKEN: ${{ secrets.WXPUSHER_APP_TOKEN }}  # WxPusher AppToken
          WXPUSHER_UID: ${{ secrets.WXPUSHER_UID }}              # 你的个人 UID
        run: |
          # 使用 curl 发送推送通知
          response=$(curl -X POST \
            -H "Content-Type: application/json" \
            -d '{
              "appToken": "'"$WXPUSHER_APP_TOKEN"'",
              "content": "Daily Report Automation 脚本执行失败，请检查日志。",
              "contentType": 1,
              "uids": ["'"$WXPUSHER_UID"'"]
            }' \
            https://wxpusher.zjiecode.com/api/send/message)

          # 检查请求是否成功
          if [[ $response == *"errorCode"* ]]; then
            echo "Failed to send notification"
            exit 1
          fi